version: "3.9"

services:
  tradingbot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypto_trading_bot_app

    env_file:
      - .env

    ports:
      - "8000:8000"   # FastAPI
      - "8501:8501"   # Streamlit (optional)
      - "5000:5000"   # MLflow (optional)

    volumes:
      - ./src:/app/src:cached
      - ./main.py:/app/main.py:cached
      - ./src/models:/app/src/models:cached
      - ./data/test_df_features.csv:/app/data/test_df_features.csv:ro
      - ./logs:/app/logs
      - .env:/app/.env:ro  # secure mount of environment file

    depends_on:
      db:
        condition: service_healthy

    restart: unless-stopped

    command: ["python", "main.py"]

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  db:
    image: postgres:16
    container_name: tradingbot_postgres

    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    ports:
      - "5432:5432"

    volumes:
      - postgres_data:/var/lib/postgresql/data
      # optional override of pg_hba.conf if you need custom auth rules
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf:ro

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  bot:
    build: .
    container_name: tradingbot_worker
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: ["python", "src/bot_runner.py"]
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f bot_runner || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  postgres_data: